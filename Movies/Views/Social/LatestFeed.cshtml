@model Movies.Domain.Models.BoardPost
@inject Microsoft.AspNetCore.Identity.SignInManager<ApplicationUser> signInManager
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> userManager
@inject Movies.Infrastructure.Data.MoviesDbContext context
@using Movies.Web.Models
@using Microsoft.EntityFrameworkCore
@{

    var queryOne = (from reviews in context.Reviews
                        //join followings in context.Followings on reviews.UserID equals followings.FollowedUser.Id
                    join movies in context.Movies on reviews.MovieId equals movies.Id
                    //where followings.FollowingUser.Id == userManager.GetUserId(User)
                    //where followings.IsActive == true
                    orderby reviews.CreatedAt descending
                    select new SocialFeedItem { ItemId = movies.Id, Type = "review", Title = movies.Title, Rating = reviews.Rating, Content = reviews.Content, User = reviews.User, CreatedAt = reviews.CreatedAt }).AsEnumerable();

    var queryTwo = (from boardPosts in context.BoardPosts
                        //join followings in context.Followings on boardPosts.UserID equals followings.FollowedUser.Id
                        //where followings.FollowingUser.Id == userManager.GetUserId(User)
                        //where followings.IsActive == true
                    orderby boardPosts.CreatedAt descending
                    select new SocialFeedItem { ItemId = boardPosts.Id, Type = "post", Title = boardPosts.Title, Rating = 0, Content = boardPosts.Content, User = boardPosts.User, CreatedAt = boardPosts.CreatedAt }).AsEnumerable();

    var queryThree = (from boardPosts in context.BoardPosts
                      where boardPosts.UserID == userManager.GetUserId(User)
                      orderby boardPosts.CreatedAt descending
                      select new SocialFeedItem { ItemId = boardPosts.Id, Type = "post", Title = boardPosts.Title, Rating = 0, Content = boardPosts.Content, User = boardPosts.User, CreatedAt = boardPosts.CreatedAt }).AsEnumerable();

    var joinedQueries = queryOne.Concat(queryTwo).Concat(queryThree).OrderByDescending(i => i.CreatedAt);
}


@if (signInManager.IsSignedIn(User))
{
    <div class="row justify-content-center">
        <div class="recent-social-activity-homepage">
            <h2>Social activity</h2>
            <div class="social-activity">
                @foreach (var item in joinedQueries.ToList())
                {
                    @if (item.Type == "post")
                    {
                        var postWithReplies = context.BoardPosts.Include(p => p.Replies).Where(p => p.Id == item.ItemId).Single();
                        <div class="post-wrapper">
                            <div class="info-and-content">
                                <a>@item.CreatedAt.ToShortDateString() @item.CreatedAt.ToShortTimeString()</a>
                                <p><h3><a asp-controller="Social" asp-action="PostDetails" asp-route-id="@item.ItemId">@item.Title </a></h3><a asp-action="UserDetails" asp-controller="Social" asp-route-id="@item.User.Id"> @item.User.Email</a></p>
                                <hr />
                                <a class="post-content">@item.Content</a>
                            </div>
                            <div class="replies-section">
                                <img class="comment-icon" id="@item.ItemId" src="~/images/social/comments.png" />
                                <a>@postWithReplies.Replies.Count</a>
                            </div>
                        </div>
                    }
                    else if (item.Type == "review")
                    {
                        <div class="post-wrapper">
                            <a>@item.CreatedAt</a>
                            <h3></h3><a asp-action="UserDetails" asp-controller="Social" asp-route-id="@item.User.Id"> @item.User.Email</a>
                            <hr />
                            <p>Rated <a asp-controller="Movies" asp-action="Details" asp-route-id="@item.ItemId">@item.Title</a> with @item.Rating stars.</p>
                            <hr />
                            <a class="post-content">@item.Content</a>
                        </div>
                    }
                    else
                    {
                        <div class="post-wrapper">
                            <h3><a>@item.Title</a></h3>
                            <p>@item.Content</p>
                            <p></p>
                        </div>
                    }
                }

                <a class="load-more" href="#">Load more...</a>
            </div>
        </div>
    </div>
}